openapi: 3.0.3
info:
  description: "Famifarm API specification"
  version: "1.0.0"
  title: "Famifarm-API"
  
paths:
  '/events':
    get:
      summary: List all events
      operationId: listEvents
      tags:
        - events
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of events
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create new event
      operationId: createEvent
      requestBody:
        description: Event to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Event"
      tags:
        - events
      responses:
        '200':
          description: A created event
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  '/events/{eventId}':
    get:
      summary: Find an event
      operationId: findEvent
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          description: Event id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found event
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Updates an event
      operationId: updateEvent
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Event"
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          description: Event id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated event
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes an event
      operationId: deleteEvent
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          description: Event id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  '/wastageReasons':
    get:
      summary: List all wastage reasons
      operationId: listWastageReasons
      tags:
        - wastageReasons
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of wastage reasons
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create new wastage reason
      operationId: createWastageReason
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/WastageReason"
      tags:
        - wastageReasons
      responses:
        '200':
          description: A created wastageReason
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  '/wastageReasons/{wastageReasonId}':
    get:
      summary: Find an wastage reason
      operationId: findWastageReason
      tags:
        - wastageReasons
      parameters:
        - name: wastageReasonId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found wastage reason
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Updates an wastage reason
      operationId: updateWastageReason
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/WastageReason"
      tags:
        - wastageReasons
      parameters:
        - name: wastageReasonId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated wastage reason
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes an wastage reason
      operationId: deleteWastageReason
      tags:
        - wastageReasons
      parameters:
        - name: wastageReasonId
          in: path
          description: WastageReasonId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  
  '/packageSizes':
    get:
      summary: List all package sizes
      operationId: listPackageSizes
      tags:
        - packageSizes
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of package sizes
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create new package size
      operationId: createPackageSize
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/PackageSize"
      tags:
        - packageSizes
      responses:
        '200':
          description: A created packageSize
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  '/packageSizes/{packageSizeId}':
    get:
      summary: Find a package size
      operationId: findPackageSize
      tags:
        - packageSizes
      parameters:
        - name: packageSizeId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found package size
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Updates a package size
      operationId: updatePackageSize
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/PackageSize"
      tags:
        - packageSizes
      parameters:
        - name: packageSizeId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated package size
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes a package size
      operationId: deletePackageSize
      tags:
        - packageSizes
      parameters:
        - name: packageSizeId
          in: path
          description: PackageSizeId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  '/seedBatches':
    get:
      summary: List all seed batches
      operationId: listSeedBatches
      tags:
        - seedBatches
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of seed batches
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create new package size
      operationId: createSeedBatch
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/SeedBatch"
      tags:
        - seedBatches
      responses:
        '200':
          description: A created seedBatch
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  '/seedBatches/{seedBatchId}':
    get:
      summary: Find a package size
      operationId: findSeedBatch
      tags:
        - seedBatches
      parameters:
        - name: seedBatchId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found package size
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Updates a package size
      operationId: updateSeedBatch
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/SeedBatch"
      tags:
        - seedBatches
      parameters:
        - name: seedBatchId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated package size
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes a package size
      operationId: deleteSeedBatch
      tags:
        - seedBatches
      parameters:
        - name: seedBatchId
          in: path
          description: SeedBatchId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    LocalizedEntry: 
       type: array
       items:
         $ref: '#/components/schemas/LocalizedValue'
  
    LocalizedValue: 
      type: object
      required:
        - language
        - value
      properties:
        language:
          type: string
          minLength: 2
          maxLength: 2        
        value:
          type: string
          
    Team:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'

  
    WastageReason:
      description: "Reason why a product has been thrown away"
      properties:
        id:
          type: "string"
          format: "uuid"
        reason:
          $ref: '#/components/schemas/LocalizedEntry'
  
    PerformedCultivationAction:
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'
          
    PackageSize:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
  
    Product:
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'
        defaultPackageSize:
          type: "string"
          format: "uuid"
    
    Seed:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'      
          
    SeedBatch:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        code:
          description: "Manufacturer's code for the batch"        
          type: "string"
        seedId:
          type: "string"
          format: "uuid"
        time:
          description: "Time when the seed has arrived"
          type: "string"
          format: "datetime"
          
    ProductionLine:
      properties:
        id:
          type: "string"
          format: "uuid"
        lineNumber:
          type: "integer"
          format: "int32"    
          
    CellType:
      type: "string"
      enum:
        - SMALL
        - LARGE   
        
    Batch:
      description: Identifies a single batch for it's entire life-cycle 
      type: "object"
      required:
        - productId
      properties:
        id:
          type: "string"
          format: "uuid"
        productId:
          type: "string"
          format: "uuid"
        
    Event:
      type: "object"
      required:
        - type
        - data
        - userId
        - batchId
        - time
      properties:
        id:
          type: "string"
          format: "uuid"
        batchId:
          type: "string"
          format: "uuid"
        userId:
          description: "Id of user who added this entry"
          type: "string"
          format: "uuid"
        time:
          description: "Time when the entry was added"
          type: "string"
          format: "datetime"
        type:
          type: "string"
          enum:
            - PLANTING
            - SOWING
            - PACKING
            - TABLE_SPREAD
            - CULTIVATION_OBSERVATION
            - HARVEST
            - WASTEAGE
        data:
          oneOf:
            - $ref: '#/components/schemas/PlantingEventData'
            - $ref: '#/components/schemas/SowingEventData'
            - $ref: '#/components/schemas/PackingEventData'
            - $ref: '#/components/schemas/TableSpreadEventData'
            - $ref: '#/components/schemas/CultivationObservationEventData'
            - $ref: '#/components/schemas/HarvestEventData'
            - $ref: '#/components/schemas/WastageEventData'
            
    PlantingEventData:
      properties:
        productionLineId:
          description: "Production line id"
          type: "string"
          format: "uuid"
        gutterNumber:
          type: "integer"
          format: "int32"
        gutterCount:
          description: "How many gutter were used during the planting"
          type: "integer"
          format: "int32"
        trayCount:
          description: "How many trays were planted"
          type: "integer"
          format: "int32"
        workerCount:
          description: "How many workers were doing the planting"
          type: "integer"
          format: "int32"
        workDuration:
          description: Duration of work in minutes
          type: "integer"
          format: "int32"
          
    SowingEventData:
      description: "Entry when a batch has been sowed"
      type: "object"
      required: 
        - productionLineId
        - cellType
        - amount
      properties:
        productionLineId:
          type: "string"
          format: "uuid"
        gutterNumber:
          type: "integer"
          format: "int32"
        seedBatchId:
          type: "string"
          format: "uuid"
        cellType:
          $ref: "#/components/schemas/CellType"
        amount:
          type: "number"
          format: "double"
          
    TableSpreadEventData:
      description: Event of spreading the young plant trays to nursery tables
      properties:
        tableCount:
          description: "Count of tables used"
          type: "integer"
          format: "int32"
        location:
          description: "Where the batch has been placed"
          type: "string"

    PackingEventData:
      properties:
        packedAmount:
          description: "Amount of packed items"
          type: "integer"
          format: "int32"
        packageSize:
          type: "string"
          format: "uuid"
          
    CultivationObservationEventData:
      properties:
        weight:
          description: "Weight in grams"
          type: "number"
          format: "double"
        pests:
          description: "Possible pest observations"
          type: "string"        
        luminance:
          description: "Luminance in lumens on the time of observation"
          type: "number"
          format: "double"
        performedActionIds:
          description: "List of ids of cultivation actions done based on observations"
          type: "array"
          items:
            type: "string"
            format: "uuid"
            
    HarvestEventData:
      properties:
        teamId:
          type: "string"
          format: "uuid"
        type:
          type: "string"
          enum:
            - BAGGING
            - CUTTING
            - BOXING
        productionLineId:
          description: "Production line id"
          type: "string"
          format: "uuid"
            
    WastageEventData:
      description: "Entry of products has been thrown away"
      properties:
        reasonId:
          description: "Id of reason a product has been thrown away"
          type: "string"
          format: "uuid"
        amount:
          type: "integer"
          format: "int32"
          
    Error:
      type: object
      required: [message]
      properties:
        message:
          description: The error message
          type: string