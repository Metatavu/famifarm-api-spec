openapi: 3.0.3
info:
  description: "Famifarm API specification"
  version: "1.0.0"
  title: "Famifarm-API"
security:
- BearerAuth: []
  
paths:
  '/v1/events':
    get:
      summary: List all events
      operationId: listEvents
      tags:
        - events
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
        - name: batchId
          in: query
          description: Filter results by batch id
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of events
          content:
            application/json:
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new event
      operationId: createEvent
      requestBody:
        description: Event to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Event"
      tags:
        - events
      responses:
        '200':
          description: A created event
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/events/{eventId}':
    get:
      summary: Find an event
      operationId: findEvent
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          description: Event id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found event
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates an event
      operationId: updateEvent
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Event"
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          description: Event id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated event
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes an event
      operationId: deleteEvent
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          description: Event id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  '/v1/wastageReasons':
    get:
      summary: List all wastage reasons
      operationId: listWastageReasons
      tags:
        - wastageReasons
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of wastage reasons
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new wastage reason
      operationId: createWastageReason
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/WastageReason"
      tags:
        - wastageReasons
      responses:
        '200':
          description: A created wastageReason
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/wastageReasons/{wastageReasonId}':
    get:
      summary: Find an wastage reason
      operationId: findWastageReason
      tags:
        - wastageReasons
      parameters:
        - name: wastageReasonId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found wastage reason
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates an wastage reason
      operationId: updateWastageReason
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/WastageReason"
      tags:
        - wastageReasons
      parameters:
        - name: wastageReasonId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated wastage reason
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/WastageReason"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes an wastage reason
      operationId: deleteWastageReason
      tags:
        - wastageReasons
      parameters:
        - name: wastageReasonId
          in: path
          description: WastageReasonId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  '/v1/packageSizes':
    get:
      summary: List all package sizes
      operationId: listPackageSizes
      tags:
        - packageSizes
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of package sizes
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new package size
      operationId: createPackageSize
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/PackageSize"
      tags:
        - packageSizes
      responses:
        '200':
          description: A created packageSize
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/packageSizes/{packageSizeId}':
    get:
      summary: Find a package size
      operationId: findPackageSize
      tags:
        - packageSizes
      parameters:
        - name: packageSizeId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found package size
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a package size
      operationId: updatePackageSize
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/PackageSize"
      tags:
        - packageSizes
      parameters:
        - name: packageSizeId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated package size
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PackageSize"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a package size
      operationId: deletePackageSize
      tags:
        - packageSizes
      parameters:
        - name: packageSizeId
          in: path
          description: PackageSizeId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  '/v1/seedBatches':
    get:
      summary: List all seed batches
      operationId: listSeedBatches
      tags:
        - seedBatches
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of seed batches
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new seed batch
      operationId: createSeedBatch
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/SeedBatch"
      tags:
        - seedBatches
      responses:
        '200':
          description: A created seedBatch
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  '/v1/seedBatches/{seedBatchId}':
    get:
      summary: Find a seed batch
      operationId: findSeedBatch
      tags:
        - seedBatches
      parameters:
        - name: seedBatchId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found seed batch
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a seed batch
      operationId: updateSeedBatch
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/SeedBatch"
      tags:
        - seedBatches
      parameters:
        - name: seedBatchId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated seed batch
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SeedBatch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a seed batch
      operationId: deleteSeedBatch
      tags:
        - seedBatches
      parameters:
        - name: seedBatchId
          in: path
          description: SeedBatchId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  '/v1/teams':
    get:
      summary: List all teams
      operationId: listTeams
      tags:
        - teams
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of teams
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Team"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new team
      operationId: createTeam
      requestBody:
        description: Team to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Team"
      tags:
        - teams
      responses:
        '200':
          description: A created team
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Team"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/teams/{teamId}':
    get:
      summary: Find a team
      operationId: findTeam
      tags:
        - teams
      parameters:
        - name: teamId
          in: path
          description: Team id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found team
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Team"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a team
      operationId: updateTeam
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Team"
      tags:
        - teams
      parameters:
        - name: teamId
          in: path
          description: Team id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated team
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Team"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a team
      operationId: deleteTeam
      tags:
        - teams
      parameters:
        - name: teamId
          in: path
          description: Team id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  '/v1/products':
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - products
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new product
      operationId: createProduct
      requestBody:
        description: Product to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Product"
      tags:
        - products
      responses:
        '200':
          description: A created product
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/products/{productId}':
    get:
      summary: Find a product
      operationId: findProduct
      tags:
        - products
      parameters:
        - name: productId
          in: path
          description: Product id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found product
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a product
      operationId: updateProduct
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Product"
      tags:
        - products
      parameters:
        - name: productId
          in: path
          description: Product id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated product
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a product
      operationId: deleteProduct
      tags:
        - products
      parameters:
        - name: productId
          in: path
          description: Product id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  '/v1/batches':
    get:
      summary: List all batches
      operationId: listBatches
      tags:
        - batches
      parameters:
        - name: status
          in: query
          description: Filters list by derived batch status.
          required: false
          schema:
            type: string
            enum: 
              - OPEN
              - CLOSED
              - NEGATIVE
        - name: productId
          in: query
          description: Filters list by product id
          required: false
          schema:
            type: string
            format: uuid
        - name: firstResult
          in: query
          description: Where to start listing
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResult
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
        - name: createdBefore
          in: query
          description: Created before time
          required: false
          schema:
            type: "string"
        - name: createdAfter
          in: query
          description: Created after time
          required: false
          schema:
            type: "string"
      responses:
        '200':
          description: A paged array of batches
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Batch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new batch
      operationId: createBatch
      requestBody:
        description: Batch to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Batch"
      tags:
        - batches
      responses:
        '200':
          description: A created batch
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Batch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/batches/{batchId}':
    get:
      summary: Find a batch
      operationId: findBatch
      tags:
        - batches
      parameters:
        - name: batchId
          in: path
          description: Batch id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found batch
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Batch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a batch
      operationId: updateBatch
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Batch"
      tags:
        - batches
      parameters:
        - name: batchId
          in: path
          description: Batch id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated batch
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Batch"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a batch
      operationId: deleteBatch
      tags:
        - batches
      parameters:
        - name: batchId
          in: path
          description: BatchId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/pests':
    get:
      summary: List all pests
      operationId: listPests
      tags:
        - pests
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pests
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Pest"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new pest
      operationId: createPest
      requestBody:
        description: Pest to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Pest"
      tags:
        - pests
      responses:
        '200':
          description: A created pest
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pest"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/pests/{pestId}':
    get:
      summary: Find a pest
      operationId: findPest
      tags:
        - pests
      parameters:
        - name: pestId
          in: path
          description: Pest id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found pest
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pest"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a pest
      operationId: updatePest
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Pest"
      tags:
        - pests
      parameters:
        - name: pestId
          in: path
          description: Pest id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated pest
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pest"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a pest
      operationId: deletePest
      tags:
        - pests
      parameters:
        - name: pestId
          in: path
          description: Pest id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/seeds':
    get:
      summary: List all seeds
      operationId: listSeeds
      tags:
        - seeds
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of seeds
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Seed"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new seed
      operationId: createSeed
      requestBody:
        description: Seed to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Seed"
      tags:
        - seeds
      responses:
        '200':
          description: A created seed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Seed"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/seeds/{seedId}':
    get:
      summary: Find a seed
      operationId: findSeed
      tags:
        - seeds
      parameters:
        - name: seedId
          in: path
          description: Seed id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found seed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Seed"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a seed
      operationId: updateSeed
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/Seed"
      tags:
        - seeds
      parameters:
        - name: seedId
          in: path
          description: Seed id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated seed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Seed"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a seed
      operationId: deleteSeed
      tags:
        - seeds
      parameters:
        - name: seedId
          in: path
          description: Seed id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  '/v1/productionLines':
    get:
      summary: List all production lines
      operationId: listProductionLines
      tags:
        - productionLines
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of production lines
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/ProductionLine"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new production line
      operationId: createProductionLine
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/ProductionLine"
      tags:
        - productionLines
      responses:
        '200':
          description: A created productionLine
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ProductionLine"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/productionLines/{productionLineId}':
    get:
      summary: Find a production line
      operationId: findProductionLine
      tags:
        - productionLines
      parameters:
        - name: productionLineId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found production line
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ProductionLine"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a production line
      operationId: updateProductionLine
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/ProductionLine"
      tags:
        - productionLines
      parameters:
        - name: productionLineId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated production line
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ProductionLine"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a production line
      operationId: deleteProductionLine
      tags:
        - productionLines
      parameters:
        - name: productionLineId
          in: path
          description: ProductionLineId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  '/v1/performedCultivationActions':
    get:
      summary: List all performed cultivation actions
      operationId: listPerformedCultivationActions
      tags:
        - performedCultivationActions
      parameters:
        - name: firstResult
          in: query
          description: First index of results to be returned
          required: false
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of performed cultivation actions
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/PerformedCultivationAction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new performed cultivation action
      operationId: createPerformedCultivationAction
      requestBody:
        description: Wastage reason to be added
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/PerformedCultivationAction"
      tags:
        - performedCultivationActions
      responses:
        '200':
          description: A created performedCultivationAction
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PerformedCultivationAction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/performedCultivationActions/{performedCultivationActionId}':
    get:
      summary: Find a performed cultivation action
      operationId: findPerformedCultivationAction
      tags:
        - performedCultivationActions
      parameters:
        - name: performedCultivationActionId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A found performed cultivation action
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PerformedCultivationAction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates a performed cultivation action
      operationId: updatePerformedCultivationAction
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/PerformedCultivationAction"
      tags:
        - performedCultivationActions
      parameters:
        - name: performedCultivationActionId
          in: path
          description: Wastage reason id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An updated performed cultivation action
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PerformedCultivationAction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Deletes a performed cultivation action
      operationId: deletePerformedCultivationAction
      tags:
        - performedCultivationActions
      parameters:
        - name: performedCultivationActionId
          in: path
          description: PerformedCultivationActionId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/drafts':
    get:
      summary: List all drafts
      operationId: listDrafts
      tags:
        - drafts
      parameters:
        - name: userId
          in: query
          description: User id who's drafts are beign listed
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          description: Type of draft
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A paged array of drafts
          content:
            application/json:    
              schema:
                type: "array"
                items: 
                  $ref: "#/components/schemas/Draft"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create new draft
      operationId: createDraft
      requestBody:
        description: Draft body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Draft"
      tags:
        - drafts
      responses:
        '200':
          description: A created draft
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Draft"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/v1/drafts/{draftId}':
    delete:
      summary: Deletes a draft
      operationId: deleteDraft
      tags:
        - drafts
      parameters:
        - name: draftId
          in: path
          description: Draft id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Empty result indication a successful removal
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  '/v1/reports/{type}':
    get:
      summary: Constructs report
      operationId: getReport
      tags:
        - reports
      parameters:
        - name: type
          in: path
          description: Report type
          required: true
          schema:
            type: string
        - name: fromTime
          in: query
          description: From time of the report
          required: false
          schema:
            type: "string"
        - name: toTime
          in: query
          description: To time of the report
          required: false
          schema:
            type: "string"
      responses:
        '200':
          description: Excel report
          content:
            application/vnd.ms-excel:
              schema:
                type: "string"
                format: "binary"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    LocalizedEntry: 
       type: array
       items:
         $ref: '#/components/schemas/LocalizedValue'
  
    LocalizedValue: 
      type: object
      required:
        - language
        - value
      properties:
        language:
          type: string
          minLength: 2
          maxLength: 2        
        value:
          type: string
          
    Team:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'

  
    WastageReason:
      description: "Reason why a product has been thrown away"
      properties:
        id:
          type: "string"
          format: "uuid"
        reason:
          $ref: '#/components/schemas/LocalizedEntry'
  
    PerformedCultivationAction:
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'
          
    PackageSize:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'
        size:
          type: "integer"
          format: "int32"

    Product:
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'
        defaultPackageSizeId:
          type: "string"
          format: "uuid"

    Pest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'

    Seed:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          $ref: '#/components/schemas/LocalizedEntry'

    SeedBatch:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        code:
          description: "Manufacturer's code for the batch"
          type: "string"
        seedId:
          type: "string"
          format: "uuid"
        time:
          description: "Time when the seed has arrived"
          type: "string"
          format: "date-time"

    ProductionLine:
      properties:
        id:
          type: "string"
          format: "uuid"
        lineNumber:
          type: "string"
        defaultTeamId:
          type: "string"
          format: "uuid"
        defaultGutterHoleCount:
          type: "integer"
          format: "int32"

    PotType:
      type: "string"
      enum:
        - SMALL
        - LARGE

    Batch:
      description: Identifies a single batch for it's entire life-cycle 
      type: "object"
      required:
        - productId
      properties:
        id:
          type: "string"
          format: "uuid"
        productId:
          type: "string"
          format: "uuid"
        createdAt:
          type: "string"
          format: "date-time"

    Event:
      type: "object"
      required:
        - type
        - data
        - batchId
        - time
      properties:
        id:
          type: "string"
          format: "uuid"
        batchId:
          type: "string"
          format: "uuid"
        userId:
          description: "Id of user who added this entry"
          type: "string"
          format: "uuid"
        startTime:
          description: "Time when the entry was added"
          type: "string"
          format: "date-time"
        endTime:
          description: "Time when the entry was added"
          type: "string"
          format: "date-time"
        remainingUnits:
          type: "integer"
          format: int32
          readOnly: true
        additionalInformation:
          type: "string"
        type:
          $ref: '#/components/schemas/EventType'
        data:
          oneOf:
            - $ref: '#/components/schemas/PlantingEventData'
            - $ref: '#/components/schemas/SowingEventData'
            - $ref: '#/components/schemas/PackingEventData'
            - $ref: '#/components/schemas/TableSpreadEventData'
            - $ref: '#/components/schemas/CultivationObservationEventData'
            - $ref: '#/components/schemas/HarvestEventData'
            - $ref: '#/components/schemas/WastageEventData'

    PlantingEventData:
      properties:
        productionLineId:
          description: "Production line id"
          type: "string"
          format: "uuid"
        gutterHoleCount:
          type: "integer"
          format: "int32"
          description: "Number of holes in gutter used in planting"
        gutterCount:
          description: "How many gutter were used during the planting"
          type: "integer"
          format: "int32"
        trayCount:
          description: "How many trays were planted"
          type: "integer"
          format: "int32"
        workerCount:
          description: "How many workers were doing the planting"
          type: "integer"
          format: "int32"
          
    SowingEventData:
      description: "Entry when a batch has been sowed"
      type: "object"
      required: 
        - productionLineId
        - trayType
        - amount
      properties:
        productionLineId:
          type: "string"
          format: "uuid"
        seedBatchId:
          type: "string"
          format: "uuid"
        potType:
          $ref: "#/components/schemas/PotType"
        amount:
          type: "integer"
          format: "int32"
          
    TableSpreadEventData:
      description: Event of spreading the young plant trays to nursery tables
      properties:
        trayCount:
          description: "Count of trays used"
          type: "integer"
          format: "int32"
        location:
          description: "Where the batch has been placed"
          type: "string"

    PackingEventData:
      properties:
        packedCount:
          description: "Amount of created packages"
          type: "integer"
          format: "int32"
        packageSizeId:
          type: "string"
          format: "uuid"
          
    CultivationObservationEventData:
      properties:
        weight:
          description: "Weight in grams"
          type: "number"
          format: "double"
        pestIds:
          description: "List of ids pests observed"
          type: "array"
          items:
            type: "string"
            format: "uuid"
        luminance:
          description: "Luminance in lumens on the time of observation"
          type: "number"
          format: "double"
        performedActionIds:
          description: "List of ids of cultivation actions done based on observations"
          type: "array"
          items:
            type: "string"
            format: "uuid"
            
    HarvestEventData:
      required:
        - amount
      properties:
        teamId:
          type: "string"
          format: "uuid"
        gutterCount:
          type: "integer"
          format: "int32"
        type:
          type: "string"
          enum:
            - BAGGING
            - CUTTING
            - BOXING
        productionLineId:
          description: "Production line id"
          type: "string"
          format: "uuid"
            
    WastageEventData:
      required:
        - amount
        - phase
        - reasonId
      description: "Entry of products has been thrown away"
      properties:
        reasonId:
          description: "Id of reason a product has been thrown away"
          type: "string"
          format: "uuid"
        amount:
          type: "integer"
          format: "int32"
        productionLineId:
          type: "string"
          format: "uuid"
        phase:
          $ref: '#/components/schemas/EventType'

    EventType:
      type: "string"
      enum:
        - PLANTING
        - SOWING
        - PACKING
        - TABLE_SPREAD
        - CULTIVATION_OBSERVATION
        - HARVEST
        - WASTAGE

    Draft:
      type: "object"
      required:
        - type
        - data
      properties:
        id:
          type: "string"
          format: "uuid"
        type:
          type: "string"
        data:
          type: "string"
        userId:
          description: "Id of user who added draft"
          type: "string"
          format: "uuid"
          readOnly: true
        createdAt:
          description: "Time when the draft was created"
          type: "string"
          format: "date-time"
          readOnly: true
          
    ErrorResponse:
      type: object
      required: [message]
      properties:
        message:
          description: The error message
          type: string