{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Famifarm-API",
    "description" : "Famifarm API specification",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "security" : [ {
    "BearerAuth" : [ ]
  } ],
  "paths" : {
    "/v1/events" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "List all events",
        "operationId" : "listEvents",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of events",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "events" ],
        "summary" : "Create new event",
        "operationId" : "createEvent",
        "requestBody" : {
          "description" : "Event to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created event",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "Find an event",
        "operationId" : "findEvent",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found event",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "events" ],
        "summary" : "Updates an event",
        "operationId" : "updateEvent",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated event",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "events" ],
        "summary" : "Deletes an event",
        "operationId" : "deleteEvent",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/wastageReasons" : {
      "get" : {
        "tags" : [ "wastageReasons" ],
        "summary" : "List all wastage reasons",
        "operationId" : "listWastageReasons",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of wastage reasons",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WastageReason"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "wastageReasons" ],
        "summary" : "Create new wastage reason",
        "operationId" : "createWastageReason",
        "requestBody" : {
          "description" : "Wastage reason to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WastageReason"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created wastageReason",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WastageReason"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/wastageReasons/{wastageReasonId}" : {
      "get" : {
        "tags" : [ "wastageReasons" ],
        "summary" : "Find an wastage reason",
        "operationId" : "findWastageReason",
        "parameters" : [ {
          "name" : "wastageReasonId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found wastage reason",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WastageReason"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "wastageReasons" ],
        "summary" : "Updates an wastage reason",
        "operationId" : "updateWastageReason",
        "parameters" : [ {
          "name" : "wastageReasonId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WastageReason"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated wastage reason",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WastageReason"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "wastageReasons" ],
        "summary" : "Deletes an wastage reason",
        "operationId" : "deleteWastageReason",
        "parameters" : [ {
          "name" : "wastageReasonId",
          "in" : "path",
          "description" : "WastageReasonId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/packageSizes" : {
      "get" : {
        "tags" : [ "packageSizes" ],
        "summary" : "List all package sizes",
        "operationId" : "listPackageSizes",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of package sizes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PackageSize"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "packageSizes" ],
        "summary" : "Create new package size",
        "operationId" : "createPackageSize",
        "requestBody" : {
          "description" : "Wastage reason to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PackageSize"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created packageSize",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PackageSize"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/packageSizes/{packageSizeId}" : {
      "get" : {
        "tags" : [ "packageSizes" ],
        "summary" : "Find a package size",
        "operationId" : "findPackageSize",
        "parameters" : [ {
          "name" : "packageSizeId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found package size",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PackageSize"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "packageSizes" ],
        "summary" : "Updates a package size",
        "operationId" : "updatePackageSize",
        "parameters" : [ {
          "name" : "packageSizeId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PackageSize"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated package size",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PackageSize"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "packageSizes" ],
        "summary" : "Deletes a package size",
        "operationId" : "deletePackageSize",
        "parameters" : [ {
          "name" : "packageSizeId",
          "in" : "path",
          "description" : "PackageSizeId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/seedBatches" : {
      "get" : {
        "tags" : [ "seedBatches" ],
        "summary" : "List all seed batches",
        "operationId" : "listSeedBatches",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of seed batches",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SeedBatch"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "seedBatches" ],
        "summary" : "Create new seed batch",
        "operationId" : "createSeedBatch",
        "requestBody" : {
          "description" : "Wastage reason to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeedBatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created seedBatch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeedBatch"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/seedBatches/{seedBatchId}" : {
      "get" : {
        "tags" : [ "seedBatches" ],
        "summary" : "Find a seed batch",
        "operationId" : "findSeedBatch",
        "parameters" : [ {
          "name" : "seedBatchId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found seed batch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeedBatch"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "seedBatches" ],
        "summary" : "Updates a seed batch",
        "operationId" : "updateSeedBatch",
        "parameters" : [ {
          "name" : "seedBatchId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeedBatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated seed batch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeedBatch"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "seedBatches" ],
        "summary" : "Deletes a seed batch",
        "operationId" : "deleteSeedBatch",
        "parameters" : [ {
          "name" : "seedBatchId",
          "in" : "path",
          "description" : "SeedBatchId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams" : {
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "List all teams",
        "operationId" : "listTeams",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of teams",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "teams" ],
        "summary" : "Create new team",
        "operationId" : "createTeam",
        "requestBody" : {
          "description" : "Team to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Team"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created team",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Team"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{teamId}" : {
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Find a team",
        "operationId" : "findTeam",
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "description" : "Team id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found team",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Team"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "teams" ],
        "summary" : "Updates a team",
        "operationId" : "updateTeam",
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "description" : "Team id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Team"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated team",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Team"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "teams" ],
        "summary" : "Deletes a team",
        "operationId" : "deleteTeam",
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "description" : "Team id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "List all products",
        "operationId" : "listProducts",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of products",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "products" ],
        "summary" : "Create new product",
        "operationId" : "createProduct",
        "requestBody" : {
          "description" : "Product to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created product",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productId}" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "Find a product",
        "operationId" : "findProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found product",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "products" ],
        "summary" : "Updates a product",
        "operationId" : "updateProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated product",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "products" ],
        "summary" : "Deletes a product",
        "operationId" : "deleteProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches" : {
      "get" : {
        "tags" : [ "batches" ],
        "summary" : "List all batches",
        "operationId" : "listBatches",
        "parameters" : [ {
          "name" : "maxResult",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of batches",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Batch"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "batches" ],
        "summary" : "Create new batch",
        "operationId" : "createBatch",
        "requestBody" : {
          "description" : "Batch to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Batch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created batch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Batch"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batchId}" : {
      "get" : {
        "tags" : [ "batches" ],
        "summary" : "Find a batch",
        "operationId" : "findBatch",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "Batch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found batch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Batch"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "batches" ],
        "summary" : "Updates a batch",
        "operationId" : "updateBatch",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "Batch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Batch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated batch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Batch"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "batches" ],
        "summary" : "Deletes a batch",
        "operationId" : "deleteBatch",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "BatchId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/seeds" : {
      "get" : {
        "tags" : [ "seeds" ],
        "summary" : "List all seeds",
        "operationId" : "listSeeds",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of seeds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Seed"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "seeds" ],
        "summary" : "Create new seed",
        "operationId" : "createSeed",
        "requestBody" : {
          "description" : "Seed to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Seed"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created seed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Seed"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/seeds/{seedId}" : {
      "get" : {
        "tags" : [ "seeds" ],
        "summary" : "Find a seed",
        "operationId" : "findSeed",
        "parameters" : [ {
          "name" : "seedId",
          "in" : "path",
          "description" : "Seed id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found seed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Seed"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "seeds" ],
        "summary" : "Updates a seed",
        "operationId" : "updateSeed",
        "parameters" : [ {
          "name" : "seedId",
          "in" : "path",
          "description" : "Seed id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Seed"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated seed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Seed"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "seeds" ],
        "summary" : "Deletes a seed",
        "operationId" : "deleteSeed",
        "parameters" : [ {
          "name" : "seedId",
          "in" : "path",
          "description" : "Seed id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productionLines" : {
      "get" : {
        "tags" : [ "productionLines" ],
        "summary" : "List all production lines",
        "operationId" : "listProductionLines",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of production lines",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductionLine"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "productionLines" ],
        "summary" : "Create new production line",
        "operationId" : "createProductionLine",
        "requestBody" : {
          "description" : "Wastage reason to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductionLine"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created productionLine",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductionLine"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productionLines/{productionLineId}" : {
      "get" : {
        "tags" : [ "productionLines" ],
        "summary" : "Find a production line",
        "operationId" : "findProductionLine",
        "parameters" : [ {
          "name" : "productionLineId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found production line",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductionLine"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "productionLines" ],
        "summary" : "Updates a production line",
        "operationId" : "updateProductionLine",
        "parameters" : [ {
          "name" : "productionLineId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductionLine"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated production line",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductionLine"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "productionLines" ],
        "summary" : "Deletes a production line",
        "operationId" : "deleteProductionLine",
        "parameters" : [ {
          "name" : "productionLineId",
          "in" : "path",
          "description" : "ProductionLineId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/performedCultivationActions" : {
      "get" : {
        "tags" : [ "performedCultivationActions" ],
        "summary" : "List all performed cultivation actions",
        "operationId" : "listPerformedCultivationActions",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "How many items to return at one time",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paged array of performed cultivation actions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PerformedCultivationAction"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "performedCultivationActions" ],
        "summary" : "Create new performed cultivation action",
        "operationId" : "createPerformedCultivationAction",
        "requestBody" : {
          "description" : "Wastage reason to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PerformedCultivationAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A created performedCultivationAction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PerformedCultivationAction"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/performedCultivationActions/{performedCultivationActionId}" : {
      "get" : {
        "tags" : [ "performedCultivationActions" ],
        "summary" : "Find a performed cultivation action",
        "operationId" : "findPerformedCultivationAction",
        "parameters" : [ {
          "name" : "performedCultivationActionId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A found performed cultivation action",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PerformedCultivationAction"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "performedCultivationActions" ],
        "summary" : "Updates a performed cultivation action",
        "operationId" : "updatePerformedCultivationAction",
        "parameters" : [ {
          "name" : "performedCultivationActionId",
          "in" : "path",
          "description" : "Wastage reason id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Request payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PerformedCultivationAction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An updated performed cultivation action",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PerformedCultivationAction"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "performedCultivationActions" ],
        "summary" : "Deletes a performed cultivation action",
        "operationId" : "deletePerformedCultivationAction",
        "parameters" : [ {
          "name" : "performedCultivationActionId",
          "in" : "path",
          "description" : "PerformedCultivationActionId",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty result indication a successful removal"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "LocalizedEntry" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/LocalizedValue"
        }
      },
      "LocalizedValue" : {
        "required" : [ "language", "value" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "Team" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "$ref" : "#/components/schemas/LocalizedEntry"
          }
        }
      },
      "WastageReason" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "reason" : {
            "$ref" : "#/components/schemas/LocalizedEntry"
          }
        },
        "description" : "Reason why a product has been thrown away"
      },
      "PerformedCultivationAction" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "$ref" : "#/components/schemas/LocalizedEntry"
          }
        }
      },
      "PackageSize" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Product" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "$ref" : "#/components/schemas/LocalizedEntry"
          },
          "defaultPackageSize" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "Seed" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "$ref" : "#/components/schemas/LocalizedEntry"
          }
        }
      },
      "SeedBatch" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "code" : {
            "type" : "string",
            "description" : "Manufacturer's code for the batch"
          },
          "seedId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "time" : {
            "type" : "string",
            "description" : "Time when the seed has arrived",
            "format" : "datetime"
          }
        }
      },
      "ProductionLine" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "lineNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CellType" : {
        "type" : "string",
        "enum" : [ "SMALL", "LARGE" ]
      },
      "Batch" : {
        "required" : [ "productId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "productId" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "description" : "Identifies a single batch for it's entire life-cycle"
      },
      "Event" : {
        "required" : [ "batchId", "data", "time", "type", "userId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "batchId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "description" : "Id of user who added this entry",
            "format" : "uuid"
          },
          "time" : {
            "type" : "string",
            "description" : "Time when the entry was added",
            "format" : "datetime"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PLANTING", "SOWING", "PACKING", "TABLE_SPREAD", "CULTIVATION_OBSERVATION", "HARVEST", "WASTEAGE" ]
          },
          "data" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/PlantingEventData"
            }, {
              "$ref" : "#/components/schemas/SowingEventData"
            }, {
              "$ref" : "#/components/schemas/PackingEventData"
            }, {
              "$ref" : "#/components/schemas/TableSpreadEventData"
            }, {
              "$ref" : "#/components/schemas/CultivationObservationEventData"
            }, {
              "$ref" : "#/components/schemas/HarvestEventData"
            }, {
              "$ref" : "#/components/schemas/WastageEventData"
            } ]
          }
        }
      },
      "PlantingEventData" : {
        "properties" : {
          "productionLineId" : {
            "type" : "string",
            "description" : "Production line id",
            "format" : "uuid"
          },
          "gutterNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "gutterCount" : {
            "type" : "integer",
            "description" : "How many gutter were used during the planting",
            "format" : "int32"
          },
          "trayCount" : {
            "type" : "integer",
            "description" : "How many trays were planted",
            "format" : "int32"
          },
          "workerCount" : {
            "type" : "integer",
            "description" : "How many workers were doing the planting",
            "format" : "int32"
          },
          "workDuration" : {
            "type" : "integer",
            "description" : "Duration of work in minutes",
            "format" : "int32"
          }
        }
      },
      "SowingEventData" : {
        "required" : [ "amount", "cellType", "productionLineId" ],
        "type" : "object",
        "properties" : {
          "productionLineId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "gutterNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "seedBatchId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cellType" : {
            "$ref" : "#/components/schemas/CellType"
          },
          "amount" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "description" : "Entry when a batch has been sowed"
      },
      "TableSpreadEventData" : {
        "properties" : {
          "tableCount" : {
            "type" : "integer",
            "description" : "Count of tables used",
            "format" : "int32"
          },
          "location" : {
            "type" : "string",
            "description" : "Where the batch has been placed"
          }
        },
        "description" : "Event of spreading the young plant trays to nursery tables"
      },
      "PackingEventData" : {
        "properties" : {
          "packedAmount" : {
            "type" : "integer",
            "description" : "Amount of packed items",
            "format" : "int32"
          },
          "packageSize" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "CultivationObservationEventData" : {
        "properties" : {
          "weight" : {
            "type" : "number",
            "description" : "Weight in grams",
            "format" : "double"
          },
          "pests" : {
            "type" : "string",
            "description" : "Possible pest observations"
          },
          "luminance" : {
            "type" : "number",
            "description" : "Luminance in lumens on the time of observation",
            "format" : "double"
          },
          "performedActionIds" : {
            "type" : "array",
            "description" : "List of ids of cultivation actions done based on observations",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "HarvestEventData" : {
        "properties" : {
          "teamId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BAGGING", "CUTTING", "BOXING" ]
          },
          "productionLineId" : {
            "type" : "string",
            "description" : "Production line id",
            "format" : "uuid"
          }
        }
      },
      "WastageEventData" : {
        "properties" : {
          "reasonId" : {
            "type" : "string",
            "description" : "Id of reason a product has been thrown away",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Entry of products has been thrown away"
      },
      "ErrorResponse" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The error message"
          }
        }
      }
    },
    "securitySchemes" : {
      "BearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    }
  }
}