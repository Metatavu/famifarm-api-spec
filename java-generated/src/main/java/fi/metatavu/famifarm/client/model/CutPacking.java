/*
 * Famifarm-API
 * Famifarm API specification
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.famifarm.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * CutPacking
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-19T13:04:40.726+02:00[Europe/Helsinki]")public class CutPacking {

  @JsonProperty("id")

  private UUID id = null;

  @JsonProperty("weight")

  private Double weight = null;

  @JsonProperty("productId")

  private UUID productId = null;

  @JsonProperty("productionLineId")

  private UUID productionLineId = null;

  @JsonProperty("cuttingDay")

  private OffsetDateTime cuttingDay = null;

  @JsonProperty("sowingDay")

  private OffsetDateTime sowingDay = null;

  @JsonProperty("producer")

  private String producer = null;

  @JsonProperty("contactInformation")

  private String contactInformation = null;

  @JsonProperty("gutterCount")

  private Integer gutterCount = null;

  @JsonProperty("gutterHoleCount")

  private Integer gutterHoleCount = null;

  @JsonProperty("storageCondition")

  private String storageCondition = null;
  public CutPacking id(UUID id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }
  public void setId(UUID id) {
    this.id = id;
  }
  public CutPacking weight(Double weight) {
    this.weight = weight;
    return this;
  }

  

  /**
  * Get weight
  * @return weight
  **/
  @Schema(required = true, description = "")
  public Double getWeight() {
    return weight;
  }
  public void setWeight(Double weight) {
    this.weight = weight;
  }
  public CutPacking productId(UUID productId) {
    this.productId = productId;
    return this;
  }

  

  /**
  * Get productId
  * @return productId
  **/
  @Schema(required = true, description = "")
  public UUID getProductId() {
    return productId;
  }
  public void setProductId(UUID productId) {
    this.productId = productId;
  }
  public CutPacking productionLineId(UUID productionLineId) {
    this.productionLineId = productionLineId;
    return this;
  }

  

  /**
  * Get productionLineId
  * @return productionLineId
  **/
  @Schema(required = true, description = "")
  public UUID getProductionLineId() {
    return productionLineId;
  }
  public void setProductionLineId(UUID productionLineId) {
    this.productionLineId = productionLineId;
  }
  public CutPacking cuttingDay(OffsetDateTime cuttingDay) {
    this.cuttingDay = cuttingDay;
    return this;
  }

  

  /**
  * Get cuttingDay
  * @return cuttingDay
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCuttingDay() {
    return cuttingDay;
  }
  public void setCuttingDay(OffsetDateTime cuttingDay) {
    this.cuttingDay = cuttingDay;
  }
  public CutPacking sowingDay(OffsetDateTime sowingDay) {
    this.sowingDay = sowingDay;
    return this;
  }

  

  /**
  * Get sowingDay
  * @return sowingDay
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getSowingDay() {
    return sowingDay;
  }
  public void setSowingDay(OffsetDateTime sowingDay) {
    this.sowingDay = sowingDay;
  }
  public CutPacking producer(String producer) {
    this.producer = producer;
    return this;
  }

  

  /**
  * Get producer
  * @return producer
  **/
  @Schema(required = true, description = "")
  public String getProducer() {
    return producer;
  }
  public void setProducer(String producer) {
    this.producer = producer;
  }
  public CutPacking contactInformation(String contactInformation) {
    this.contactInformation = contactInformation;
    return this;
  }

  

  /**
  * Get contactInformation
  * @return contactInformation
  **/
  @Schema(required = true, description = "")
  public String getContactInformation() {
    return contactInformation;
  }
  public void setContactInformation(String contactInformation) {
    this.contactInformation = contactInformation;
  }
  public CutPacking gutterCount(Integer gutterCount) {
    this.gutterCount = gutterCount;
    return this;
  }

  

  /**
  * Get gutterCount
  * @return gutterCount
  **/
  @Schema(required = true, description = "")
  public Integer getGutterCount() {
    return gutterCount;
  }
  public void setGutterCount(Integer gutterCount) {
    this.gutterCount = gutterCount;
  }
  public CutPacking gutterHoleCount(Integer gutterHoleCount) {
    this.gutterHoleCount = gutterHoleCount;
    return this;
  }

  

  /**
  * Get gutterHoleCount
  * @return gutterHoleCount
  **/
  @Schema(required = true, description = "")
  public Integer getGutterHoleCount() {
    return gutterHoleCount;
  }
  public void setGutterHoleCount(Integer gutterHoleCount) {
    this.gutterHoleCount = gutterHoleCount;
  }
  public CutPacking storageCondition(String storageCondition) {
    this.storageCondition = storageCondition;
    return this;
  }

  

  /**
  * Get storageCondition
  * @return storageCondition
  **/
  @Schema(required = true, description = "")
  public String getStorageCondition() {
    return storageCondition;
  }
  public void setStorageCondition(String storageCondition) {
    this.storageCondition = storageCondition;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CutPacking cutPacking = (CutPacking) o;
    return Objects.equals(this.id, cutPacking.id) &&
        Objects.equals(this.weight, cutPacking.weight) &&
        Objects.equals(this.productId, cutPacking.productId) &&
        Objects.equals(this.productionLineId, cutPacking.productionLineId) &&
        Objects.equals(this.cuttingDay, cutPacking.cuttingDay) &&
        Objects.equals(this.sowingDay, cutPacking.sowingDay) &&
        Objects.equals(this.producer, cutPacking.producer) &&
        Objects.equals(this.contactInformation, cutPacking.contactInformation) &&
        Objects.equals(this.gutterCount, cutPacking.gutterCount) &&
        Objects.equals(this.gutterHoleCount, cutPacking.gutterHoleCount) &&
        Objects.equals(this.storageCondition, cutPacking.storageCondition);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, weight, productId, productionLineId, cuttingDay, sowingDay, producer, contactInformation, gutterCount, gutterHoleCount, storageCondition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CutPacking {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productionLineId: ").append(toIndentedString(productionLineId)).append("\n");
    sb.append("    cuttingDay: ").append(toIndentedString(cuttingDay)).append("\n");
    sb.append("    sowingDay: ").append(toIndentedString(sowingDay)).append("\n");
    sb.append("    producer: ").append(toIndentedString(producer)).append("\n");
    sb.append("    contactInformation: ").append(toIndentedString(contactInformation)).append("\n");
    sb.append("    gutterCount: ").append(toIndentedString(gutterCount)).append("\n");
    sb.append("    gutterHoleCount: ").append(toIndentedString(gutterHoleCount)).append("\n");
    sb.append("    storageCondition: ").append(toIndentedString(storageCondition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
