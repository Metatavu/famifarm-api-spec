/*
 * Famifarm-API
 * Famifarm API specification
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.famifarm.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.UUID;

/**
 * Event
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-12-11T13:43:28.226+02:00[Europe/Helsinki]")public class Event {

  @JsonProperty("id")

  private UUID id = null;

  @JsonProperty("batchId")

  private UUID batchId = null;

  @JsonProperty("userId")

  private UUID userId = null;

  @JsonProperty("time")

  private String time = null;
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    PLANTING("PLANTING"),
    SOWING("SOWING"),
    PACKING("PACKING"),
    TABLE_SPREAD("TABLE_SPREAD"),
    CULTIVATION_OBSERVATION("CULTIVATION_OBSERVATION"),
    HARVEST("HARVEST"),
    WASTEAGE("WASTEAGE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }
  @JsonProperty("type")

  private TypeEnum type = null;

  @JsonProperty("data")

  private Object data = null;
  public Event id(UUID id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }
  public void setId(UUID id) {
    this.id = id;
  }
  public Event batchId(UUID batchId) {
    this.batchId = batchId;
    return this;
  }

  

  /**
  * Get batchId
  * @return batchId
  **/
  @Schema(required = true, description = "")
  public UUID getBatchId() {
    return batchId;
  }
  public void setBatchId(UUID batchId) {
    this.batchId = batchId;
  }
  public Event userId(UUID userId) {
    this.userId = userId;
    return this;
  }

  

  /**
  * Id of user who added this entry
  * @return userId
  **/
  @Schema(required = true, description = "Id of user who added this entry")
  public UUID getUserId() {
    return userId;
  }
  public void setUserId(UUID userId) {
    this.userId = userId;
  }
  public Event time(String time) {
    this.time = time;
    return this;
  }

  

  /**
  * Time when the entry was added
  * @return time
  **/
  @Schema(required = true, description = "Time when the entry was added")
  public String getTime() {
    return time;
  }
  public void setTime(String time) {
    this.time = time;
  }
  public Event type(TypeEnum type) {
    this.type = type;
    return this;
  }

  

  /**
  * Get type
  * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }
  public Event data(Object data) {
    this.data = data;
    return this;
  }

  

  /**
  * Get data
  * @return data
  **/
  @Schema(required = true, description = "")
  public Object getData() {
    return data;
  }
  public void setData(Object data) {
    this.data = data;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.id, event.id) &&
        Objects.equals(this.batchId, event.batchId) &&
        Objects.equals(this.userId, event.userId) &&
        Objects.equals(this.time, event.time) &&
        Objects.equals(this.type, event.type) &&
        Objects.equals(this.data, event.data);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, batchId, userId, time, type, data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
